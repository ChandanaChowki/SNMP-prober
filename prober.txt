#!/usr/bin/python3

import easysnmp
from easysnmp import *
import sys, time, math
from easysnmp import snmp_get,snmp_walk

name_of_agent = sys.argv[1]
input_of_agent = name_of_agent.split(':')
IPaddress_of_agent = input_of_agent[0]
PortNo_of_agent = input_of_agent[1]
Community_of_agent = input_of_agent[2]
SampleFreq = float(sys.argv[2])
Counts_sample = int(sys.argv[3])
SamplingTime = 1/SampleFreq
ObjIDs = []
ObjectIdentifier1=[]
ObjectIdentifier2=[]
timer=""
#print(SampleFreq)
for cha in range(4,len(sys.argv)):
	ObjIDs.append(sys.argv[cha])
ObjIDs.insert(0,'1.3.6.1.2.1.1.3.0')
#OIDs=[int(float(l)) for l in ObjIDs] 
#print(ObjIDs)

#def SNMPagentTime():
#	#AgentTime=[]
#	session=Session(hostname=IPaddress_of_agent,remote_port=PortNo_of_agent,community=Community_of_agent,version=2,timeout=1)
#	SnmpTime=session.get(ObjIDs)
#	return int(SnmpTime[0].value)
session=Session(hostname=IPaddress_of_agent,remote_port=PortNo_of_agent,community=Community_of_agent,version=2,timeout=1,retries=3)

def chadu():
	global ObjectIdentifier1, new_time, timer2
	Output = session.get(ObjIDs)
	TimerSys= int(Output[0].value)/100
	ObjectIdentifier2 = []
	#print("timer2 {}".format(TimerSys))
#	for t in range(0,len(Output)):
#		print("Output value{}".format(Output[t].value))

	# if int(TimerSys) > 2**32 or int(TimerSys) <= 0:
	# 	print(" The system just restarted. ")

	for du in range(1,len(Output)):
		if Output[du].value!='NOSUCHOBJECT' and Output[du].value!='NOSUCHINSTANCE':

			#print(Output[du].snmp_type)
			if Output[du].snmp_type=='COUNTER64' or Output[du].snmp_type=='GAUGE' or Output[du].snmp_type=='COUNTER':
				ObjectIdentifier2.append(int(Output[du].value))
				#print("loid2 {}".format(ObjectIdentifier2))
			else:
				ObjectIdentifier2.append(Output[du].value)
			#print("loid1 {}".format(ObjectIdentifier1))
	
			if count!=0 and len(ObjectIdentifier1)>0:
				if TimerSys > new_time:	
					if Output[du].snmp_type=='COUNTER' or Output[du].snmp_type=='COUNTER32'or Output[du].snmp_type=='COUNTER64': 
						OIDdiff = int(ObjectIdentifier2[du-1]) - int(ObjectIdentifier1[du-1])
						diff_time=(TimerSys - new_time)
						rate = int(OIDdiff / diff_time)
						if rate < 0:
							if TimerSys > new_time:
								if Output[du].snmp_type == 'COUNTER32':
									OIDdiff = OIDdiff + (2**32)
									try:
										if timer==str(timer2):
											print(round(OIDdiff/(diff_time)),end="|")
										else:
											print(timer2,"|",round(OIDdiff/(diff_time)), end="|");timer=str(timer2)

									except:
										print(timer2,"|", round(OIDdiff/(diff_time)), end= "|");timer=str(timer2)

								elif Output[du].snmp_type == 'COUNTER64':
									OIDdiff=OIDdiff+2**64
									try:
										if timer==str(timer2):
											print(round(OIDdiff/(diff_time)), end ="|")
										else:
											print(timer2, "|", round(OIDdiff/(diff_time)), end="|");timer=str(timer2)
										
									except:
										print(timer2,"|",round(OIDdiff/(diff_time)),end= "|");timer=str(timer2)

							else:
								print(" This seems like the system was restarted ")
								break

						else:
							try:
								if timer==str(timer2):
									print( round(rate) ,end= "|")
								else:
									print(timer2,"|", round(rate), end="|") 
									timer=str(timer2)
							except:
								print(timer2 ,"|", round(rate), end="|")  
								timer=str(timer2)

					elif Output[du].snmp_type=='GAUGE':
						OIDdiff = int(ObjectIdentifier2[du-1]) - int(ObjectIdentifier1[du-1])
						#if OIDdiff>0: OIDdiff="+"+str(OIDdiff)
						try:
							if timer==str(timer2):
								print(ObjectIdentifier2[len(ObjectIdentifier2)-1],"(",+OIDdiff,")", end="|")
							else:
								print(timer2,"|",ObjectIdentifier2[len(ObjectIdentifier2)-1],"(",+OIDdiff,")", end="|")
								timer=str(timer2)
						except:
							print(timer2,"|",ObjectIdentifier2[len(ObjectIdentifier2)-1],"(",+OIDdiff,")", end="|")
							timer=str(timer2)
				else: 
					print(" This seems like the system was restarted ")
					break
	ObjectIdentifier1 = ObjectIdentifier2
	new_time = TimerSys
if Counts_sample==-1:
	count = 0
	ObjectIdentifier1 = []
	while True:
		timer2 = time.time()
		chadu()
		if count!=0:
			print(end="\n")
		ResponseTime = time.time()
		count = count+1
		if SamplingTime >= ResponseTime - timer2:
			time.sleep((SamplingTime- ResponseTime + timer2))
		else:
			n=math.ceil((ResponseTime-timer2)/SamplingTime)
			print(n,"n",((n*SamplingTime)- ResponseTime + timer2))
			time.sleep(((n*SamplingTime)- ResponseTime + timer2))
else:
	ObjectIdentifier1 = []
	a=Counts_sample
	for count in range(0,Counts_sample+1):
		timer2 = time.time()
		chadu()
		if count!=0:
			print(end="\n")
		ResponseTime = time.time()
		if SamplingTime >= ResponseTime - timer2:
			time.sleep((SamplingTime- ResponseTime + timer2))
		else:
			n=math.ceil((ResponseTime-timer2)/SamplingTime)
			#print(n,"n",((n*SamplingTime)- ResponseTime + timer2))
			time.sleep(((n*SamplingTime)- ResponseTime + timer2))
